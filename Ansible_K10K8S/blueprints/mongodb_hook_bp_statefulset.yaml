kind: Blueprint
apiVersion: cr.kanister.io/v1alpha1
metadata:
  name: mongo-hooks-statefulset
  namespace: kasten-io
actions:
  backupPosthook:
    name: ""
    kind: ""
    phases:
      - func: KubeExec
        name: unlockMongo
        objects:
          mongoDbSecret:
            apiVersion: ""
            group: ""
            resource: ""
            kind: Secret
            name: "{{ .Object.metadata.name }}"
            namespace: "{{ .StatefulSet.Namespace }}"
        args:
          command:
            - bash
            - -o
            - errexit
            - -o
            - pipefail
            - -c
            - >
              export MONGODB_ROOT_PASSWORD='{{ index
              .Phases.unlockMongo.Secrets.mongoDbSecret.Data
              "mongodb-root-password" | toString }}'

              mongosh --authenticationDatabase admin -u root -p "${MONGODB_ROOT_PASSWORD}" --eval="db.fsyncUnlock()"
          container: mongodb
          namespace: "{{ .StatefulSet.Namespace }}"
          pod: "{{ index .StatefulSet.Pods 0 }}"
  backupPrehook:
    name: ""
    kind: ""
    phases:
      - func: KubeExec
        name: lockMongo
        objects:
          mongoDbSecret:
            apiVersion: ""
            group: ""
            resource: ""
            kind: Secret
            name: "{{ .Object.metadata.name }}"
            namespace: "{{ .StatefulSet.Namespace }}"
        args:
          command:
            - bash
            - -o
            - errexit
            - -o
            - pipefail
            - -c
            - >
              export MONGODB_ROOT_PASSWORD='{{ index
              .Phases.lockMongo.Secrets.mongoDbSecret.Data
              "mongodb-root-password" | toString }}'

              mongosh --authenticationDatabase admin -u root -p "${MONGODB_ROOT_PASSWORD}" --eval="db.fsyncLock()"
          container: mongodb
          namespace: "{{ .StatefulSet.Namespace }}"
          pod: "{{ index .StatefulSet.Pods 0 }}"
